steps:
  # Setup buildx for multi-platform builds
  - name: "gcr.io/cloud-builders/docker"
    args: ["buildx", "create", "--name", "multiplatform", "--use"]

  # Login to Docker Hub
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - "docker login -u $$DOCKER_USERNAME -p $$DOCKER_PASSWORD"
    secretEnv: ["DOCKER_USERNAME", "DOCKER_PASSWORD"]

  # # Build backend-app image
  # - name: "gcr.io/cloud-builders/docker"
  #   args:
  #     [
  #       "buildx",
  #       "build",
  #       "--platform=linux/amd64",
  #       "--tag=ellliotcarery/backend-app:$COMMIT_SHA",
  #       "--push",
  #       "-f",
  #       "backend/Dockerfile",
  #       "backend",
  #     ]

  # Build celery-worker image
  # - name: "gcr.io/cloud-builders/docker"
  #   args:
  #     [
  #       "buildx",
  #       "build",
  #       "--platform=linux/amd64",
  #       "--tag=ellliotcarery/celery-worker:$COMMIT_SHA",
  #       "--push",
  #       "-f",
  #       "backend/Dockerfile",
  #       "backend",
  #     ]

  # # Build frontend-app image
  # - name: "gcr.io/cloud-builders/docker"
  #   args:
  #     [
  #       "buildx",
  #       "build",
  #       "--platform=linux/amd64",
  #       "--tag=ellliotcarery/frontend-app:$COMMIT_SHA",
  #       "--push",
  #       "-f",
  #       "frontend/dockerfile",
  #       "frontend",
  #     ]

  # Build infinite-talk-server image
  # - name: "gcr.io/cloud-builders/docker"
  #   args:
  #     [
  #       "buildx",
  #       "build",
  #       "--platform=linux/amd64",
  #       "--tag=elliotcarery/infinite-talk-server:1.0",
  #       "--push",
  #       "-f",
  #       "dockerfile",
  #       ".",
  #     ]
  #   dir: "backend/servers/infinite_talk"

  # Build zonos-server image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "buildx",
        "build",
        "--platform=linux/amd64",
        "--tag=elliotcarery/zonos-server:1.0.4",
        "--push",
        "-f",
        "dockerfile",
        ".",
      ]
    dir: "backend/servers/zonos"

# Configure secrets
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/docker-username/versions/latest
      env: "DOCKER_USERNAME"
    - versionName: projects/$PROJECT_ID/secrets/docker-password/versions/latest
      env: "DOCKER_PASSWORD"

options:
  machineType: "E2_HIGHCPU_8"
  diskSizeGb: 200
  logging: CLOUD_LOGGING_ONLY

serviceAccount: "projects/caramel-duality-382403/serviceAccounts/techlistpair@caramel-duality-382403.iam.gserviceaccount.com"
